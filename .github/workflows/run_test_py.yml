name: Python test suite (flake8 + pytest)

on: [push]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
        rdkit-version: [2019.03, 2020.03]
        exclude:
          # old RDKit do not support recent Python
          - rdkit-version: 2019.03
            python-version: [3.8, 3.9]

    steps:
    - uses: actions/checkout@v2
    - uses: conda-incubator/setup-miniconda@v1
      with: 
        auto-update-conda: true
        python-version: ${{ matrix.python-version }}
        activate-environment: dev_rpreactor
        environment-file: environment.yml
        auto-activate-base: false
    - name: Lint with flake8
      shell: bash -l {0}
      run: |
        conda install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: (Re)install RDKit to a specific version
      shell: bash -l {0}
      run: conda install -y -c conda-forge python=${{ matrix.python-version }} rdkit=${{ matrix.rdkit-version }}
    - name: Test with pytest
      shell: bash -l {0}
      run: |
        pytest --doctest-modules --junitxml=junit/test-results-${{ matrix.python-version }}-${{ matrix.rdkit-version }}.xml
    - name: Upload pytest test results
      uses: actions/upload-artifact@v2
      with:
        name: pytest-results-${{ matrix.python-version }}-${{ matrix.rdkit-version }}
        path: junit/test-results-${{ matrix.python-version }}-${{ matrix.rdkit-version }}.xml
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}
